//Generated by wsdl2apex

public class AsyncSoapListener {
    public class notificationsResponse_elementFuture extends System.WebServiceCalloutFuture {
        public Boolean getValue() {
            SoapListener.notificationsResponse_element response = (SoapListener.notificationsResponse_element)System.WebServiceCallout.endInvoke(this);
            return response.Ack;
        }
    }
    public class AsyncNotification {
        public String endpoint_x = 'http://trishutest-developer-edition.ap1.force.com/123/services/Soap/class/MessageListener';
        public Map<String,String> inputHttpHeaders_x;
        public String clientCertName_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://soap.sforce.com/2005/09/outbound', 'SoapListener', 'urn:sobject.enterprise.soap.sforce.com', 'sobjectEnterpriseSoapSforceCom', 'urn:enterprise.soap.sforce.com', 'enterpriseSoapSforceCom'};
        public AsyncSoapListener.notificationsResponse_elementFuture beginNotifications(System.Continuation continuation,String OrganizationId,String ActionId,String SessionId,String EnterpriseUrl,String PartnerUrl,SoapListener.AccountNotification[] Notification) {
            SoapListener.notifications_element request_x = new SoapListener.notifications_element();
            request_x.OrganizationId = OrganizationId;
            request_x.ActionId = ActionId;
            request_x.SessionId = SessionId;
            request_x.EnterpriseUrl = EnterpriseUrl;
            request_x.PartnerUrl = PartnerUrl;
            request_x.Notification = Notification;
            return (AsyncSoapListener.notificationsResponse_elementFuture) System.WebServiceCallout.beginInvoke(
              this,
              request_x,
              AsyncSoapListener.notificationsResponse_elementFuture.class,
              continuation,
              new String[]{endpoint_x,
              '',
              'http://soap.sforce.com/2005/09/outbound',
              'notifications',
              'http://soap.sforce.com/2005/09/outbound',
              'notificationsResponse',
              'SoapListener.notificationsResponse_element'}
            );
        }
    }
}